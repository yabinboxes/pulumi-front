{"version":3,"sources":["./src/app/inventory/orgs.model.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/inventory/inventory.component.ts","./src/app/inventory/inventory.component.html","./src/app/image-registry/image-registry.component.html","./src/app/image-registry/image-registry.component.ts","./src/app/plugins/plugins-http.service.ts","./src/app/prod-unit/prod-unit.component.ts","./src/app/prod-unit/prod-unit.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/dev-unit/dev-unit.component.ts","./src/app/dev-unit/dev-unit.component.html","./src/app/app.module.ts","./src/app/inventory/inventory-http.service.ts","./src/app/dev-unit/dev-unit-http.service.ts","./src/app/plugins/plugins.component.ts","./src/app/plugins/plugins.component.html","./src/app/inventory/project.model.ts","./src/app/image-registry/image-registry-http.service.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ProjectModel } from \"./project.model\";\n\nexport class OrgsModel {\n    public name?: string;\n    public description?: string;\n    public projects?: Array<ProjectModel>\n}","import { Component, OnInit } from '@angular/core';\nimport { faCubes, faRocket, faRobot, faLaptopCode, faThList } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  title = 'pulumi-front';\n  faCubes = faCubes;\n  faRocket = faRocket;\n  faRobot = faRobot;\n  faLaptopCode = faLaptopCode;\n  faThList = faThList;\n\n  showView = \"inventory\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changeView(newView) {\n    this.showView=newView;\n  }\n\n}\n","<div class=\"flex justify-center items-center top-0 left-0 w-screen m-0 bg-gray-900 text-white\">\n  <div class=\"container flex flex-row bg-gray-900 text-white shadow-lg bg-primary text-secondary\">\n    <div class=\"sidebar-icon group\" (click)=\"changeView('image-registry')\">\n      <fa-icon [icon]=\"faCubes\"></fa-icon>\n      <span class=\"sidebar-tooltip scale-100\">Image Registry</span>\n    </div>\n    <div class=\"sidebar-icon group\" (click)=\"changeView('dev-unit')\">\n      <fa-icon [icon]=\"faLaptopCode\"></fa-icon>\n      <span class=\"sidebar-tooltip scale-100\">Dev Unit</span>\n    </div>\n    <div class=\"sidebar-icon group\" (click)=\"changeView('prod-unit')\">\n      <fa-icon [icon]=\"faRocket\"></fa-icon>\n      <span class=\"sidebar-tooltip scale-100\">Mark for Prod</span>\n    </div>\n    <div class=\"sidebar-icon group\" (click)=\"changeView('plugins')\">\n      <fa-icon [icon]=\"faRobot\"></fa-icon>\n      <span class=\"sidebar-tooltip scale-100\">Plugin</span>\n    </div>\n    <div class=\"sidebar-icon group\" (click)=\"changeView('inventory')\">\n      <fa-icon [icon]=\"faThList\"></fa-icon>\n      <span class=\"sidebar-tooltip scale-100\">Inventory</span>\n    </div>\n  </div>\n</div>\n\n\n<app-image-registry *ngIf=\"showView==='image-registry'\"></app-image-registry>\n<app-dev-unit *ngIf=\"showView==='dev-unit'\"></app-dev-unit>\n<app-prod-unit *ngIf=\"showView==='prod-unit'\"></app-prod-unit>\n<app-plugins *ngIf=\"showView==='plugins'\"></app-plugins>\n<app-inventory *ngIf=\"showView==='inventory'\"></app-inventory>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { InventoryHttpService } from './inventory-http.service';\nimport { OrgsModel } from './orgs.model';\nimport { ProjectModel } from './project.model';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.scss']\n})\nexport class InventoryComponent implements OnInit {\n\n  public orgList : OrgsModel[] = [];\n  public prjList : ProjectModel[] = [];\n  public \n\n\n  FormInputs: FormGroup;\n  constructor(private _inventoryHttpService: InventoryHttpService) { }\n\n  ngOnInit(): void {\n    this.FormInputs = new FormGroup({\n      orgName: new FormControl(''),\n      projectName: new FormControl('')\n    });\n\n    this._inventoryHttpService.getInventory().subscribe((response) => {\n      let temp:any = response;\n      console.log(\"org  -> \", temp);\n      this.orgList = temp.orgs; \n    }, (error) => {\n      console.log('error is ', error)\n    });\n\n  }\n\n  addOrg(form: FormGroup) {\n    \n    let myOrg = new OrgsModel();\n    //myOrg.id = \"1\";\n    myOrg.name = form.value.orgName;\n    this.orgList.push(myOrg);\n  }\n\n  removeOrg(index: number) {\n    if(index > -1) {\n      this.orgList.splice(index,1);\n    }\n  }\n\n  selectOrg(index: number) {\n    if(index > -1) {\n      this.prjList = this.orgList[index].projects;\n    }\n  }\n\n  addProject(form: FormGroup) {\n   \n    let myProject = new ProjectModel();\n    //myProject.id = \"1\";\n    myProject.name = form.value.projectName;\n    this.prjList.push(myProject);\n  }\n\n  removeProject(index:number) {\n    if(index > -1) {\n      this.prjList.splice(index,1);\n    }\n  }\n\n\n}\n","<div class=\"flex justify-center items-start top-0 left-0 w-screen m-0 mt-10  min-h-fit\">\n    <div class=\"container\">\n\n        <div class=\"grid grid-cols-3 gap-2 min-w-fit\">\n\n            <div class=\"col-span-1 border-r-4 min-h-fit\">\n\n                <!-- new ORG -->\n                <section class=\"example-button-row m-3\">\n                    <form [formGroup]=\"FormInputs\" (ngSubmit)=\"addOrg(FormInputs)\">\n                        <div class=\"text-gray-900 font-bold text-xl mb-2\">ORGs (L1)</div>\n                        <input type=\"text\" class=\"\n        form-control\n        block\n        w-full\n        px-3\n        py-1.5\n        text-base\n        font-normal\n        text-gray-700\n        bg-white bg-clip-padding\n        border border-solid border-gray-300\n        rounded\n        transition\n        ease-in-out\n        m-0\n        focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\n      \" id=\"exampleFormControlInput1\" placeholder=\"Org name\" formControlName=\"orgName\" />\n                        <div class=\"w-full text-right m-0\">\n                            <button type=\"submit\" mat-raised-button color=\"primary\" style=\"margin-right: 0px;\">Add\n                                new org</button>\n                        </div>\n                        <mat-divider></mat-divider>\n                    </form>\n\n                    <!-- list ORGs -->\n\n                    <mat-selection-list #org [multiple]=\"false\">\n                        <mat-list-option *ngFor=\"let org of orgList; let i = index\" [value]=\"org.name\" (click)=\"selectOrg(i)\">\n                            <mat-icon mat-list-icon (click)=\"removeOrg(i)\">delete</mat-icon>\n                            {{org.name}}\n                        </mat-list-option>\n                    </mat-selection-list>\n                </section>\n\n            </div>\n            <div class=\"col-span-1 border-r-4\">\n               \n                <!-- new PROJECT -->\n                <section class=\"example-button-row m-3\">\n                    <form [formGroup]=\"FormInputs\" (ngSubmit)=\"addProject(FormInputs)\">\n                        <div class=\"text-gray-900 font-bold text-xl mb-2\">PROJECTs (L2)</div>\n                        <input type=\"text\" class=\"\n        form-control\n        block\n        w-full\n        px-3\n        py-1.5\n        text-base\n        font-normal\n        text-gray-700\n        bg-white bg-clip-padding\n        border border-solid border-gray-300\n        rounded\n        transition\n        ease-in-out\n        m-0\n        focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\n      \" id=\"exampleFormControlInput1\" placeholder=\"Project name\" formControlName=\"projectName\" />\n                        <div class=\"w-full text-right m-0\">\n                            <button type=\"submit\" mat-raised-button color=\"primary\" style=\"margin-right: 0px;\">Add\n                                new project</button>\n                        </div>\n                        <mat-divider></mat-divider>\n                    </form>\n\n                    <!-- list PROJECTs -->\n\n                    <mat-selection-list #prj [multiple]=\"false\">\n                        <mat-list-option *ngFor=\"let prj of prjList; let i = index\" [value]=\"prj.name\" (click)=\"selectPrj(i)\">\n                            <mat-icon mat-list-icon (click)=\"removeProject(i)\">delete</mat-icon>\n                            {{prj.name}}\n                        </mat-list-option>\n                    </mat-selection-list>\n                </section>\n            </div>\n            <div class=\"col-span-1\">\n                <div class=\"text-gray-900 font-bold text-xl mb-2\">RESOURCEs (L3)</div>\n                <br/>\n                <br/>\n                <label>repo details</label>\n                <br/>\n                <label>repo name</label>\n            </div>\n        </div>\n\n    </div>\n</div>","<div class=\"flex justify-center items-center top-0 left-0 w-screen m-0 mt-10\">\n    <div class=\"container\">\n       \n        <mat-list>\n            <div class=\"text-gray-900 font-bold text-xl mb-2\">Base Images</div>\n            <mat-list-item *ngFor=\"let image of baseImages\">\n                <mat-icon mat-list-icon>code</mat-icon>\n                <div mat-line>{{image.name}}</div>\n                <div mat-line> {{image.cloudType}} </div>\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <div class=\"text-gray-900 font-bold text-xl mb-2\">Images</div>\n            <mat-list-item *ngFor=\"let image of images\">\n                <mat-icon mat-list-icon>code</mat-icon>\n                <div mat-line>{{image.name}}</div>\n                <div mat-line> {{image.cloudType}} </div>\n            </mat-list-item>\n        </mat-list>\n        \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ImageRegistryHttpService } from './image-registry-http.service';\n\n\nexport interface Images {\n  origin: string;\n  cloudType: string;\n  name: string;\n  containerType: string;\n  createdDate: string;\n  updatedDate: string;\n  //valid: boolean;\n  details: string;\n}\n\n@Component({\n  selector: 'app-image-registry',\n  templateUrl: './image-registry.component.html',\n  styleUrls: ['./image-registry.component.scss']\n})\nexport class ImageRegistryComponent implements OnInit {\n\n  baseImages: Images[] = [];\n  images:Images[] = [];\n\n  constructor(private _imageRegistryHttpService: ImageRegistryHttpService) { }\n\n  ngOnInit(): void {\n\n    this._imageRegistryHttpService.getImages().subscribe((response) => {\n      let temp:any = response;\n      console.log(\"res -> \", temp);\n      this.baseImages = temp.baseList;\n      this.images = temp.list; \n    }, (error) => {\n      console.log('error is ', error)\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PluginsHttpService {\n\n  constructor(private _http: HttpClient) { }\n\n  getPlugins() {\n    return this._http.get('http://localhost:5000/plugins')\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-prod-unit',\n  templateUrl: './prod-unit.component.html',\n  styleUrls: ['./prod-unit.component.scss']\n})\nexport class ProdUnitComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"mt-20 flex flex-wrap justify-center\">\n    <img src=\"../../assets/puppycat.png\" alt=\"puppycat\">\n</div>\n","import { Component } from '@angular/core';\nimport { faCubes, faRocket, faRobot, faLaptopCode } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n}\n","<app-home></app-home>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Unit } from './deployed-unit-list.model';\nimport { DeployedUnit } from './deployed-unit.model';\nimport { DevUnitHttpService } from './dev-unit-http.service';\n\n/*export interface Section {\n  name: string;\n  updated: Date;\n}*/\n\n@Component({\n  selector: 'app-dev-unit',\n  templateUrl: './dev-unit.component.html',\n  styleUrls: ['./dev-unit.component.scss']\n})\nexport class DevUnitComponent implements OnInit {\n  panelOpenState = false;\n\n  /*folders: Section[] = [\n    {\n      name: 'Photos',\n      updated: new Date('1/1/16'),\n    },\n    {\n      name: 'Recipes',\n      updated: new Date('1/17/16'),\n    },\n    {\n      name: 'Work',\n      updated: new Date('1/28/16'),\n    },\n  ];\n  notes: Section[] = [\n    {\n      name: 'Vacation Itinerary',\n      updated: new Date('2/20/16'),\n    },\n    {\n      name: 'Kitchen Remodel',\n      updated: new Date('1/18/16'),\n    },\n  ];*/\n\n\n\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n  codeLocation: 'github' | 'local' = 'github';\n  pipelineOptions: FormGroup;\n\n  data = {\n    'location': 'http://gitlab',\n    'type': 'gitlab'\n  };\n\n  public deployedList: Unit[] = [];\n  public deployedUnit: DeployedUnit = {\n    msg: \"pending\",\n    url: \"\"\n  };\n\n  constructor(private _devUnitHttpService: DevUnitHttpService, private _formBuilder: FormBuilder) { }\n\n  \n\n  ngOnInit(): void {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n    this.pipelineOptions = this._formBuilder.group({\n      security: false,\n      unittest: false,\n      sonar: false,\n      performancce: false\n    });\n\n    this._devUnitHttpService.getDevUnits().subscribe((response) => {\n      let temp:any = response;\n      this.deployedList = temp.list; \n    }, (error) => {\n      console.log('error is ', error)\n    });\n\n\n  }\n\n  deployApp() {\n    this._devUnitHttpService.deployDevUnit(this.data).subscribe((response) => {\n      console.log(\"response => \", response);\n      this.deployedUnit = response;\n    }, (error) => {\n      console.log('error is ', error)\n    })\n  }\n\n}\n","<div class=\"flex justify-center items-center top-0 left-0 w-screen m-0 mt-10\">\n  <div class=\"container\">\n\n    <!--<mat-accordion>\n      <mat-expansion-panel hideToggle>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            This is the expansion title\n          </mat-panel-title>\n          <mat-panel-description>\n            This is a summary of the content\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p>This is the primary content of the panel.</p>\n      </mat-expansion-panel>\n    </mat-accordion>-->\n\n    <div class=\"text-gray-900 font-bold text-xl mb-2\">Last Created Resources</div>\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let unit of deployedList\" hideToggle>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{unit.url}}\n          </mat-panel-title>\n          <mat-panel-description>\n            {{unit.date}}\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p>This is the primary content of the panel.</p>\n      </mat-expansion-panel>\n    </mat-accordion>\n\n    \n\n  </div>\n</div>\n\n<!--\n<div class=\"mt-20 flex flex-wrap justify-center\">\n  <div class=\"container\">\n    <mat-grid-list cols=\"2\">\n      <mat-grid-tile>\n        <div>\n          <h2>Deploy dev unit</h2>\n          <mat-vertical-stepper [linear]=\"isLinear\" #stepper>\n            <mat-step [stepControl]=\"firstFormGroup\">\n              <form [formGroup]=\"firstFormGroup\">\n                <ng-template matStepLabel\n                  >Fill out source code location</ng-template\n                >\n                <section>\n                  <br />\n                  <label class=\"code-location-margin\">Code location:</label>\n                  <mat-radio-group\n                    [(ngModel)]=\"codeLocation\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                  >\n                    <mat-radio-button value=\"github\">Github</mat-radio-button>\n                    <mat-radio-button value=\"local\">Local</mat-radio-button>\n                  </mat-radio-group>\n                </section>\n                <br />\n                <section *ngIf=\"codeLocation === 'github'\">\n                  <p>\n                    <mat-form-field appearance=\"fill\">\n                      <mat-label>github</mat-label>\n                      <input matInput placeholder=\"Placeholder\" />\n                    </mat-form-field>\n                  </p>\n                </section>\n                <section *ngIf=\"codeLocation === 'local'\">\n                  <p>\n                    <input\n                      type=\"file\"\n                      id=\"ctrl\"\n                      webkitdirectory\n                      directory\n                      multiple\n                    />\n                  </p>\n                </section>\n                <div>\n                  <button mat-button matStepperNext>Next</button>\n                </div>\n              </form>\n            </mat-step>\n            <mat-step [stepControl]=\"secondFormGroup\">\n              <form [formGroup]=\"secondFormGroup\">\n                <ng-template matStepLabel>Check pipeline options</ng-template>\n                <section class=\"devops-section\" [formGroup]=\"pipelineOptions\">\n                  <p>\n                    <mat-checkbox formControlName=\"security\"\n                      >security</mat-checkbox\n                    >\n                  </p>\n                  <p>\n                    <mat-checkbox formControlName=\"unittest\"\n                      >unit test</mat-checkbox\n                    >\n                  </p>\n                  <p>\n                    <mat-checkbox formControlName=\"sonar\">sonar</mat-checkbox>\n                  </p>\n                  <p>\n                    <mat-checkbox formControlName=\"performancce\"\n                      >performancce</mat-checkbox\n                    >\n                  </p>\n                </section>\n                <div>\n                  <button mat-button matStepperPrevious>Back</button>\n                  <button mat-button matStepperNext>Next</button>\n                </div>\n              </form>\n            </mat-step>\n            <mat-step>\n              <ng-template matStepLabel>Deploy</ng-template>\n              <div>\n                <h2>Properties</h2>\n                <h3>{{ codeLocation }}</h3>\n                <section class=\"example-section\" [formGroup]=\"pipelineOptions\">\n                  <h4>You chose:</h4>\n                  {{ pipelineOptions.value | json }}\n                </section>\n                <mat-card>{{ deployedUnit.url }}</mat-card>\n              </div>\n              <div>\n                <button mat-button matStepperPrevious>Back</button>\n                <button color=\"primary\" (click)=\"deployApp()\" mat-raised-button>\n                  Deploy\n                </button>\n                \n              </div>\n            </mat-step>\n          </mat-vertical-stepper>\n        </div>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <div>\n          <mat-list>\n            <div mat-subheader>Last Deployments</div>\n            <mat-list-item *ngFor=\"let unit of deployedList\">\n              <mat-icon mat-list-icon>http</mat-icon>\n              <div mat-line>{{ unit.url }}</div>\n              <div mat-line>{{ unit.date }}</div>\n            </mat-list-item>\n          </mat-list>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>-->","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatNativeDateModule } from '@angular/material/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ImageRegistryComponent } from './image-registry/image-registry.component';\nimport { DevUnitComponent } from './dev-unit/dev-unit.component';\nimport { ProdUnitComponent } from './prod-unit/prod-unit.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialExampleModule } from './material.module';\nimport { PluginsComponent } from './plugins/plugins.component';\nimport { InventoryComponent } from './inventory/inventory.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ImageRegistryComponent,\n    DevUnitComponent,\n    ProdUnitComponent,\n    PluginsComponent,\n    InventoryComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FontAwesomeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    // Material\n    MaterialExampleModule\n  ],\n  providers: [],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryHttpService {\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  constructor(private _http: HttpClient) { }\n\n  getInventory() {\n    return this._http.get('http://localhost:5000/inventory')\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DevUnitHttpService {\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  constructor(private _http: HttpClient) { }\n\n  getDevUnits() {\n    return this._http.get('http://localhost:5000/deploy-dev-unit')\n  }\n\n  deployDevUnit(data) {\n    return this._http.post(\n      'http://localhost:5000/deploy-dev-unit',\n      JSON.stringify(data)/*,\n      this.httpOptions*/\n    )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PluginsHttpService } from './plugins-http.service';\nimport { Plugins } from './plugins.model';\nimport { faPlayCircle, faCopy } from '@fortawesome/free-solid-svg-icons';\n\nimport { parse, stringify } from 'yaml';\n\n\n@Component({\n  selector: 'app-plugins',\n  templateUrl: './plugins.component.html',\n  styleUrls: ['./plugins.component.scss']\n})\nexport class PluginsComponent implements OnInit {\n\n\n\n  plugins: Plugins[] = [];\n  faPlayCircle = faPlayCircle;\n  faCopy = faCopy;\n\n  yamlValue = { \"name\": \"Test & Build\", \"jobs\": { \"builds\": { \"runs-on\": \"ubuntu-latest\" } } };\n  yamlValueOut: string;\n\n\n  constructor(private _pluginsHttpService: PluginsHttpService) { }\n\n  ngOnInit(): void {\n\n    this.yamlValueOut = `\n      name: Lint, Test & Build\n\n      on: [push]\n\n      jobs:\n        builds:\n          runs-on: ubuntu-latest\n    `;\n    //this.yamlValueOut = this.renderJSON(this.yamlValue);\n\n    //console.log(\"yaml -> \", this.yamlValueOut);\n\n    this._pluginsHttpService.getPlugins().subscribe((response) => {\n      let temp: any = response;\n      this.plugins = temp.list;\n      console.log(\"plugins-> \", this.plugins);\n    }, (error) => {\n      console.log('error is ', error)\n    });\n\n  }\n\n\n\n  renderJSON(obj) {\n    'use strict';\n    var keys = [],\n      retValue = \"\";\n    for (var key in obj) {\n      if (typeof obj[key] === 'object') {\n        retValue += \"<div class='tree'>\" + key;\n        retValue += this.renderJSON(obj[key]);\n        retValue += \"</div>\";\n      } else {\n        retValue += \"<div class='tree'>\" + key + \" = \" + obj[key] + \"</div>\";\n      }\n\n      keys.push(key);\n    }\n    return retValue;\n  }\n\n}\n","<div class=\"flex justify-center items-center top-0 left-0 w-screen m-0 mt-10\">\n    <div class=\"container\">\n        <div class=\"grid grid-cols-3 gap-0\">\n            <div class=\"col-span-1 border-r border-b border-l border-t border-gray-400 bg-white rounded-b\">\n                <div class=\"max-w-sm w-full lg:max-w-full lg:flex grid grid-flow-row auto-rows-max\"\n                    *ngFor=\"let item of plugins; let i = index\">\n                    <div\n                        class=\"w-[5rem] h-auto flex bg-cover rounded-t rounded-l text-center items-center overflow-hidden\">\n                        <fa-icon [icon]=\"faPlayCircle\" class=\"w-24 h-24 fa-3x\"></fa-icon>\n                    </div>\n                    <div class=\"w-full rounded-b-none rounded-r p-4 pl-0 flex flex-row justify-between leading-normal\">\n                        <div class=\"mb-8\">\n                            <div class=\"text-gray-900 font-bold text-xl mb-2\">{{item.name}}</div>\n                            <p class=\"text-gray-700 text-base\">{{item.description}}</p>\n                            <p class=\"text-sm text-gray-600 flex items-center\">\n                                Github\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-span-2\">\n                <div\n                    class=\"w-full max-w-full flex h-[62rem] border-r border-b border-t border-gray-400 bg-white rounded-b-none rounded-r leading-normal\">\n                    <div class=\"w-full p-4 pt-1 leading-normal\">\n                        <div class=\"w-full text-right items-end\">\n                            <fa-icon [icon]=\"faCopy\" class=\"w-24 h-24 fa-lg\"></fa-icon>\n                        </div>\n                        <div class=\"mb-8 mt-3 text-code\">\n                            <!--<div class=\"text-gray-900 font-bold text-xl mb-2\">Can coffee make you a better developer?\n                            </div>-->\n                            <div class=\"text-gray-700 text-base\">\n\n                                <!-- table -->\n\n\n                                <table style=\"white-space: pre;\">\n                                    <tr>\n                                        <td>name: Lint, Test & Build</td>\n                                    </tr>\n                                    <tr>\n                                        <td>on: [push]</td>\n                                    </tr>\n                                    <tr>\n                                        <td>jobs:</td>\n                                    </tr>\n                                    <tr>\n                                        <td><code class=\"undefined spaces\">&nbsp;&nbsp;</code>builds:</td>\n                                    </tr>\n                                    <tr>\n                                        <td><code class=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>runs-on:\n                                            ubuntu-latest</td>\n                                    </tr>\n                                    <tr>\n                                        <td><code class=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>strategy:</td>\n                                    </tr>\n                                    <tr>\n                                        <td><code class=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>matrix:</td>\n                                    </tr>\n                                    <tr>\n                                        <td><code class=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>node-version: [14.x]</td>\n                                    </tr>\n                                </table>\n\n                                <!-- end table -->\n\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n\n\n\n<!--<div class=\"mt-20 flex flex-wrap\">\n    <div class=\"container\">\n        <mat-grid-list cols=\"3\">\n            <mat-grid-tile [colspan]=\"1\">\n                <mat-selection-list #shoes [multiple]=\"false\">\n                    <mat-list-option *ngFor=\"let plugin of plugins\" [value]=\"plugin\">\n                        {{plugin.name}}\n                    </mat-list-option>\n                </mat-selection-list>\n            </mat-grid-tile>\n            <mat-grid-tile [colspan]=\"2\">\n                <div class=\"flex justify-center\">\n                    <div class=\"block rounded-lg shadow-lg bg-white max-w-sm text-center\">\n                        <div class=\"py-3 px-6 border-b border-gray-300\">\n                            Featured\n                        </div>\n                        <div class=\"p-6\">\n                            <h5 class=\"text-gray-900 text-xl font-medium mb-2\">Special title treatment</h5>\n                            <p class=\"text-gray-700 text-base mb-4\">\n                                <code>\n                                    a = 6;\n                                    b = 9;\n                                    c = \"this is the best program\";\n                                </code>\n                            </p>\n                            <button type=\"button\"\n                                class=\" inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out\">Button</button>\n                        </div>\n                        <div class=\"py-3 px-6 border-t border-gray-300 text-gray-600\">\n                            2 days ago\n                        </div>\n                    </div>\n                </div>\n\n            </mat-grid-tile>\n        </mat-grid-list>\n    </div>\n</div>-->","export class ProjectModel {\n    public description?: string;\n    public name?: string;\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageRegistryHttpService {\n\n  constructor(private _http: HttpClient) { }\n\n  getImages() {\n    return this._http.get('http://localhost:5000/images')\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n /* { path: '', pathMatch: 'full', component: NotFoundComponent },\n  { path: 'menu/:id', pathMatch: 'full', component: ShowMenuComponent },\n  { path: '**', redirectTo: '' }*/\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkAccordionModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialExampleModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}